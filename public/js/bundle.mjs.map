{"mappings":"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","sources":["public/js/index.mjs","controllers/authController.js","models/userModel.js","utils/catchAsync.js","utils/appError.js","utils/email.js","public/js/login.mjs","public/js/alerts.mjs","public/js/mapbox.mjs"],"sourcesContent":["/* eslint-disable */\r\n// import '@babel/polyfill';\r\n// import axios from 'axios';\r\n\r\nimport { logout } from '../../controllers/authController';\r\nimport { login } from './login.mjs';\r\nimport { displayMap } from './mapbox.mjs';\r\n\r\n// DOM Elements\r\nconst mapBox = document.getElementById('map');\r\nconst loginForm = document.querySelector('.form');\r\nconst logoutBtn = document.querySelector('.nav__el--logout');\r\n\r\n// Values\r\n\r\n// Delegation\r\nif (mapBox) {\r\n  const locations = JSON.parse(mapBox.dataset.locations);\r\n  displayMap(locations);\r\n}\r\n\r\nif (loginForm) {\r\n  loginForm.addEventListener('submit', (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    login(email, password);\r\n  });\r\n}\r\n\r\nif (logoutBtn) {\r\n  logoutBtn.addEventListener('click', logout);\r\n}\r\n","// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { sign, verify } from 'jsonwebtoken';\r\nimport { promisify } from 'util';\r\nimport { createHash } from 'crypto';\r\nimport { create, findOne, findById } from '../models/userModel.js';\r\nimport catchAsync from '../utils/catchAsync.js';\r\nimport AppError from '../utils/appError.js';\r\nimport { sendEmail } from '../utils/email.js';\r\n\r\nconst signToken = (id) =>\r\n  sign({ id: id }, process.env.JWT_SECRET, {\r\n    expiresIn: process.env.JWT_EXPIRES,\r\n  });\r\n\r\nconst createSendToken = (user, statusCode, res) => {\r\n  const token = signToken(user._id);\r\n\r\n  const cookieOptions = {\r\n    expires: new Date(\r\n      Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000,\r\n    ),\r\n    httpOnly: true,\r\n  };\r\n  if (process.env.NODE_ENV === 'production') cookieOptions.secure = true;\r\n  res.cookie('jwt', token, cookieOptions);\r\n\r\n  user.password = undefined;\r\n\r\n  res.status(statusCode).json({\r\n    status: 'success',\r\n    token,\r\n    data: {\r\n      user,\r\n    },\r\n  });\r\n};\r\n\r\nexport const signup = catchAsync(async (req, res, next) => {\r\n  const newUser = await create({\r\n    name: req.body.name,\r\n    email: req.body.email,\r\n    role: req.body.role,\r\n    password: req.body.password,\r\n    passwordConfirm: req.body.passwordConfirm,\r\n    passwordChangedAt: req.body.passwordChangedAt,\r\n  });\r\n  createSendToken(newUser, 201, res);\r\n});\r\n\r\nexport const login = catchAsync(async (req, res, next) => {\r\n  const { email, password } = req.body;\r\n\r\n  // 1) check if email and password exist\r\n  if (!email || !password) {\r\n    next(new AppError('please provide email and password', 400));\r\n  }\r\n\r\n  // 2) check if user exists & password is correct\r\n  const user = await findOne({ email }).select('+password');\r\n\r\n  if (!user || !(await user.correctPassword(password, user.password))) {\r\n    return next(new AppError('incorrect email or password', 401));\r\n  }\r\n\r\n  // 3) if everything ok, send token to client\r\n  createSendToken(user, 200, res);\r\n});\r\n\r\n// only for rendered pages, no errors!\r\n\r\nexport function logout(req, res) {\r\n  res.cookie('jwt', 'loggedout', {\r\n    expires: new Date(Date.now + 10 * 1000),\r\n    httpOnly: true,\r\n  });\r\n  res.status(200).json({ status: 'success' });\r\n}\r\n\r\nexport const protect = catchAsync(async (req, res, next) => {\r\n  // 1) Getting the token and check if it's there\r\n  let token;\r\n  req.requestTime = new Date().toISOString();\r\n  if (\r\n    req.headers.authorization &&\r\n    req.headers.authorization.startsWith('Bearer')\r\n  ) {\r\n    token = req.headers.authorization.split(' ')[1];\r\n  } else if (req.cookies.jwt) {\r\n    token = req.cookies.jwt;\r\n  }\r\n\r\n  if (!token) {\r\n    return next(\r\n      new AppError('You are not logged in. Please login to get access', 401),\r\n    );\r\n  }\r\n  // 2) Verification token\r\n  const decoded = await promisify(verify)(token, process.env.JWT_SECRET);\r\n\r\n  // 3) Check  if user still exists\r\n  const freshUser = await findById(decoded.id);\r\n  if (!freshUser) {\r\n    return next(\r\n      new AppError(\r\n        'The user belonging to this token does no longer exist',\r\n        401,\r\n      ),\r\n    );\r\n  }\r\n\r\n  // 4) Check if user changed password after the token was issued\r\n  if (freshUser.changedPasswordAfter(decoded.iat)) {\r\n    return next(\r\n      new AppError('user recently changed password! Please login again', 401),\r\n    );\r\n  }\r\n\r\n  // grant access to protected route\r\n  req.user = freshUser;\r\n  next();\r\n});\r\n\r\nexport const isLoggedIn = catchAsync(async (req, res, next) => {\r\n  if (req.cookies.jwt) {\r\n    // verification token\r\n    const decoded = await promisify(verify)(\r\n      req.cookies.jwt,\r\n      process.env.JWT_SECRET,\r\n    );\r\n\r\n    // 2) Check  if user changed password after the token was issued\r\n    const currentUser = await findById(decoded.id);\r\n    if (!currentUser) {\r\n      return next();\r\n    }\r\n\r\n    // 3) Check  if user still exists\r\n    if (currentUser.changedPasswordAfter(decoded.iat)) {\r\n      return next();\r\n    }\r\n    // there is a logged in a user\r\n    res.locals.user = currentUser;\r\n    return next();\r\n  }\r\n  next();\r\n});\r\n\r\nexport function restrictTo(...roles) {\r\n  return (req, res, next) => {\r\n    // roles\r\n    if (!roles.includes(req.user.role))\r\n      return next(\r\n        new AppError('you do not have permission to perform this action', 403),\r\n      );\r\n    next();\r\n  };\r\n}\r\n\r\nexport const forgotPassword = catchAsync(async (req, res, next) => {\r\n  //get user based on posted email\r\n  const user = await findOne({ email: req.body.email });\r\n  if (!user) {\r\n    return next(new AppError('there is no user with email address.', 404));\r\n  }\r\n\r\n  //generate the random reset token\r\n  const resetToken = user.createPasswordResetToken();\r\n  await user.save({ validateBeforeSave: false });\r\n  //send it to user email\r\n\r\n  const resetURL = `${req.protocol}://${req.get(\r\n    'host',\r\n  )}/api/v1/users/resetPassword/${resetToken}`;\r\n\r\n  const message = `Forgot your password? Submit a patch request with your new password and passwordConfirm to: ${resetURL}. \r\n  If you didn't forget your password, please ignore this`;\r\n  try {\r\n    await sendEmail({\r\n      email: user.email,\r\n      subject: 'Your password reset token (valid for 10 min)',\r\n      message,\r\n    });\r\n\r\n    res.status(200).json({\r\n      status: 'success',\r\n      message: 'Token sent to email!',\r\n    });\r\n  } catch (err) {\r\n    user.passwordResetToken = undefined;\r\n    user.passwordResetExpires = undefined;\r\n    await user.save({ validateBeforeSave: false });\r\n\r\n    return next(\r\n      new AppError(\r\n        'There was an error sending the email. try again later!',\r\n        505,\r\n      ),\r\n    );\r\n  }\r\n});\r\n\r\nexport const resetPassword = catchAsync(async (req, res, next) => {\r\n  // Get user base on the token\r\n  const hashedToken = createHash('sha256')\r\n    .update(req.params.token)\r\n    .digest('hex');\r\n  console.log(hashedToken);\r\n  const user = await findOne({\r\n    passwordResetToken: hashedToken,\r\n    passwordResetExpires: { $gt: Date.now() },\r\n  });\r\n  // if token has not expired, and there is user, set new password\r\n  if (!user) return next(new AppError('token is invalid or has expired'), 400);\r\n\r\n  user.password = req.body.password;\r\n  user.passwordConfirm = req.body.passwordConfirm;\r\n  user.passwordResetToken = undefined;\r\n  user.passwordResetExpires = undefined;\r\n\r\n  await user.save();\r\n  // update changePasswordAt property for user\r\n  // Log the user in, send JWT\r\n\r\n  createSendToken(user, 200, res);\r\n});\r\n\r\nexport const updatePassport = catchAsync(async (req, res, next) => {\r\n  //get user from collection\r\n  const user = await findById(req.user.id).select('+password');\r\n  //check if posted password is correct\r\n  if (!(await user.correctPassword(req.body.passwordCurrent, user.password)))\r\n    return next(new AppError('Your current password is wrong', 401));\r\n\r\n  //if so, update the password\r\n  user.password = req.body.password;\r\n  user.passwordConfirm = req.body.passwordConfirm;\r\n  await user.save();\r\n  // log user in, send JWT\r\n  createSendToken(user, 200, res);\r\n});\r\n","const crypto = require('crypto');\r\nconst mongoose = require('mongoose');\r\nconst validator = require('validator');\r\nconst bcrypt = require('bcryptjs');\r\n\r\nconst userSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: [true, 'Please tell us your name!'],\r\n    trim: true,\r\n  },\r\n  email: {\r\n    type: String,\r\n    required: [true, 'Please provide us your email.'],\r\n    unique: true,\r\n    lowercase: true,\r\n    validate: [validator.isEmail, 'Please provide a valid email'],\r\n  },\r\n  photo: {\r\n    type: String,\r\n  },\r\n  role: {\r\n    type: String,\r\n    enum: ['user', 'guide', 'lead-guide', 'admin'],\r\n    default: 'user',\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: [true, 'Please provide a password'],\r\n    minlength: 8,\r\n    select: false,\r\n  },\r\n  passwordConfirm: {\r\n    type: String,\r\n    required: [true, 'Please confirm your password'],\r\n    validate: {\r\n      //this works only on SAVE!\r\n      validator: function (el) {\r\n        return el === this.password;\r\n      },\r\n      message: 'Passwords are not the same',\r\n    },\r\n  },\r\n  passwordChangedAt: Date,\r\n  passwordResetToken: String,\r\n  passwordResetExpires: Date,\r\n  active: {\r\n    type: Boolean,\r\n    default: true,\r\n    select: false,\r\n  },\r\n});\r\n\r\nuserSchema.pre('save', async function (next) {\r\n  // Only run this function was actually modified\r\n  if (!this.isModified('password')) return next();\r\n\r\n  // Hash the password with cost of 12\r\n  this.password = await bcrypt.hash(this.password, 12);\r\n\r\n  // Delete the password confirm field\r\n  this.passwordConfirm = undefined;\r\n  next();\r\n});\r\n\r\nuserSchema.pre('save', function (next) {\r\n  if (!this.isModified('password') || this.isNew) return next();\r\n\r\n  this.passwordChangedAt = Date.now() - 1000;\r\n  next();\r\n});\r\n\r\nuserSchema.pre(/^find/, function (next) {\r\n  //this points to the current query\r\n  this.find({ active: { $ne: false } });\r\n  next();\r\n});\r\n\r\nuserSchema.methods.changedPasswordAfter = function (JWTTimestamp) {\r\n  if (this.passwordChangedAt) {\r\n    const changedTimestamp = parseInt(\r\n      this.passwordChangedAt.getTime() / 1000,\r\n      10,\r\n    );\r\n\r\n    return JWTTimestamp < changedTimestamp;\r\n  }\r\n\r\n  // false means not changed\r\n  return false;\r\n};\r\n\r\nuserSchema.methods.correctPassword = async function (\r\n  candidatePassword,\r\n  userPassword,\r\n) {\r\n  return await bcrypt.compare(candidatePassword, userPassword);\r\n};\r\n\r\nuserSchema.methods.createPasswordResetToken = function () {\r\n  const resetToken = crypto.randomBytes(32).toString('hex');\r\n\r\n  this.passwordResetToken = crypto\r\n    .createHash('sha256')\r\n    .update(resetToken)\r\n    .digest('hex');\r\n\r\n  console.log({ resetToken }, this.passwordResetToken);\r\n\r\n  this.passwordResetExpires = Date.now() + 10 * 60 * 1000;\r\n\r\n  return resetToken;\r\n};\r\n\r\nconst User = mongoose.model('User', userSchema);\r\n\r\nmodule.exports = User;\r\n","export default (fn) => {\r\n  return (req, res, next) => {\r\n    fn(req, res, next).catch(next);\r\n  };\r\n};\r\n","class AppError extends Error {\r\n  constructor(message, statusCode) {\r\n    super(message);\r\n\r\n    this.statusCode = statusCode;\r\n    this.status = `${statusCode}`.startsWith('4') ? 'fail' : 'error';\r\n    this.isOperational = true;\r\n\r\n    Error.captureStackTrace(this, this.constructor);\r\n  }\r\n}\r\n\r\nexport default AppError;\r\n","// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { createTransport } from 'nodemailer';\r\n\r\nexport async function sendEmail(option) {\r\n  // 1) create a transporter\r\n  const transporter = createTransport({\r\n    host: process.env.EMAIL_HOST,\r\n    port: process.env.EMAIL_PORT,\r\n    auth: {\r\n      user: process.env.EMAIL_USERNAME,\r\n      pass: process.env.EMAIL_PASSWORD,\r\n    },\r\n    //activate in gmail \"less secure app\" option\r\n  });\r\n  // 2) define the email options\r\n\r\n  const mailOptions = {\r\n    from: 'Podexus23 <santon23@gmail.com>',\r\n    to: option.email,\r\n    subject: option.subject,\r\n    text: option.message,\r\n  };\r\n  // 3) actually end the email\r\n  await transporter.sendMail(mailOptions);\r\n}\r\n","/* eslint-disable */\r\nimport { showAlerts } from './alerts.mjs';\r\n\r\nexport async function login(email, password) {\r\n  try {\r\n    const res = await axios({\r\n      method: 'POST',\r\n      url: 'http://127.0.0.1:3000/api/v1/users/login',\r\n      data: {\r\n        email,\r\n        password,\r\n      },\r\n    });\r\n\r\n    if (res.data.status === 'success') {\r\n      showAlerts('success', 'Logged in successfully');\r\n      window.setTimeout(() => {\r\n        location.assign('/');\r\n      }, 1500);\r\n    }\r\n    console.log(res);\r\n  } catch (err) {\r\n    showAlerts('error', err.response.data);\r\n  }\r\n}\r\n\r\nexport const logout = async () => {\r\n  try {\r\n    const res = await axios({\r\n      method: 'GET',\r\n      url: 'http://127.0.0.1:3000/api/v1/users/logout',\r\n    });\r\n    if (res.data.status === 'success') {\r\n      location.reload(true);\r\n    }\r\n  } catch (err) {\r\n    showAlerts('error', 'Error logging out! Try again.');\r\n  }\r\n};\r\n","/* eslint-disable */\r\n\r\nexport const hideAlert = () => {\r\n  const el = document.querySelector('.alert');\r\n  if (el) el.parentElement.removeChild(el);\r\n};\r\n\r\nexport const showAlerts = (type, msg) => {\r\n  const markup = `<div class='alert alert--${type}'>${msg}</div>`;\r\n  document.querySelector('body').insertAdjacentHTML('afterbegin', markup);\r\n  window.setTimeout(hideAlert, 5000);\r\n};\r\n","/* eslint-disable */\r\n\r\nconsole.log('hello from the client side');\r\n// console.log(locations);\r\n\r\nexport function displayMap(locations) {\r\n  mapboxgl.accessToken = `pk.eyJ1IjoicG9kZXh1czIzIiwiYSI6ImNsb2lycDgzbzF1N3kycXA5NGM0OWU3NDgifQ.zr564U0ctKS60QqXa30fIg`;\r\n\r\n  const map = new mapboxgl.Map({\r\n    container: 'map',\r\n    style: 'mapbox://styles/podexus23/cloisacnk004t01o4hx5ia7t6',\r\n    scrollZoom: false,\r\n    // center: [-118.113491, 34.111745],\r\n    // zoom: 4,\r\n  });\r\n\r\n  const bounds = new mapboxgl.LngLatBounds();\r\n\r\n  locations.forEach((loc) => {\r\n    // Add marker\r\n    const el = document.createElement('div');\r\n    el.className = 'marker';\r\n    // Add marker\r\n    new mapboxgl.Marker({\r\n      element: el,\r\n      anchor: 'bottom',\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .addTo(map);\r\n\r\n    // Add popup\r\n    new mapboxgl.Popup({\r\n      offset: 30,\r\n    })\r\n      .setLngLat(loc.coordinates)\r\n      .setHTML(`<p>Day ${loc.day} ${loc.description}</p>`)\r\n      .addTo(map);\r\n\r\n    // extends map bounds to include current location\r\n    bounds.extend(loc.coordinates);\r\n  });\r\n\r\n  map.fitBounds(bounds, {\r\n    padding: {\r\n      top: 200,\r\n      bottom: 150,\r\n      left: 100,\r\n      right: 100,\r\n    },\r\n  });\r\n}\r\n"],"names":[],"version":3,"file":"bundle.mjs.map","sourceRoot":"../../"}